version: "3.8"

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    ports:
      - 3000:3000
    command: sh -c "serve -s build"
    environment:
      - NODE_ENV=production
    networks:
      - react-app-network

  server:
    build: ./server
    command: sh -c "npm run start"
    environment:
      - PORT=3001
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=secret
      - MYSQL_DATABASE=ProductsDB
    depends_on:
      - mysql
    networks:
      - react-app-network

  mysql:
    image: mysql:8.0.31
    volumes:
      - pruducts-db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=ProductsDB
    networks:
      - react-app-network

  nginx:
    image: nginx:alpine
    ports:
      - 8000:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.template
    # environment:
    #   - NGINX_HOST=YOUR_SERVER_HOST
    command: sh -c "envsubst < /etc/nginx/conf.d/nginx.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - client
      - server
    networks:
      - react-app-network

volumes:
  pruducts-db:

networks:
  react-app-network:
    driver: bridge
